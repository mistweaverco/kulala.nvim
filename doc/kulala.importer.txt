*kulala.importer.txt*       A fully-featured REST Client Interface for Neovim.

==============================================================================
Table of Contents                          *kulala.importer-table-of-contents*

1. Importing and exporting HTTP collections to and from Postman, OpenAPI, Bruno|kulala.importer-importing-and-exporting-http-collections-to-and-from-postman,-openapi,-bruno|
  - Usage|kulala.importer-importing-and-exporting-http-collections-to-and-from-postman,-openapi,-bruno-usage|

==============================================================================
1. Importing and exporting HTTP collections to and from Postman, OpenAPI, Bruno*kulala.importer-importing-and-exporting-http-collections-to-and-from-postman,-openapi,-bruno*

Kulala comes with built-in support for importing and exporting HTTP collections
to and from various formats like Postman, OpenAPI, and Bruno.


USAGE*kulala.importer-importing-and-exporting-http-collections-to-and-from-postman,-openapi,-bruno-usage*


IMPORTING

The import is provided by the formatter module which should be enabled in the
options:

>lua
    opts = { ui = { formatter = true } }
<

It can be run either through `Convert to HTTP` code action, which is available
in `json`, `yaml`, and `bruno` files, or directly with
`require("kulala").import(from)` command, where
`from=nil|"postman"|"openapi"|"bruno"`, while inside the buffer with the file
to import.

The importer will try to detect the format automatically, but if it fails, you
can specify it explicitly by passing the format as an argument.


EXPORTING

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
