*kulala.README.txt*         A fully-featured REST Client Interface for Neovim.

==============================================================================
Table of Contents                            *kulala.README-table-of-contents*

1. kulala.nvim                                     |kulala.README-kulala.nvim|
  - Features                              |kulala.README-kulala.nvim-features|
2. .                                                         |kulala.README-.|
3. ..                                                       |kulala.README-..|
  - Install                                         |kulala.README-..-install|
  - Honorable mentions                   |kulala.README-..-honorable-mentions|
4. Links                                                 |kulala.README-links|

==============================================================================
1. kulala.nvim                                     *kulala.README-kulala.nvim*

https://github.com/mistweaverco/kulala.nvim/graphs/contributors
https://github.com/mistweaverco/kulala.nvim/releases/latest
https://discord.gg/QyVQmfY4Rt

Requirements https://neovim.getkulala.net/docs/getting-started/requirements •
|kulala.README-install| • Usage https://neovim.getkulala.net/docs/usage •
HTTP File Spec https://neovim.getkulala.net/docs/usage/http-file-spec

A fully-featured REST Client Interface for Neovim.

Kulala is swahili for "rest" or "relax".

It allows you to make HTTP requests from within Neovim.


FEATURES                                  *kulala.README-kulala.nvim-features*

Protocols: HTTP, GRPC, GraphQL, WebSocket, Streaming

Specs: HTTP File Spec and IntelliJ HTTP Client compliant

Variables: Environment, Document, Request, Dynamic, Prompt, `http-client.env`
files

Importing and running requests from external `*.http` files

Importing and saving request/response data to/from external files

JS and Lua scripting: Pre-request, Post-request, Conditional, Inline, External

Authentication: Basic, Bearer, Digest, NTLM, OAuth2, Negotiate, AWS, SSL

Response formatting and live filtering

Assertions, automated testing and reporting

Built-in LSP completion and formatting

CLI tooling and CI hooks

Scratchpad: for making requests

100% Compatibility with IntelliJ HTTP Client


==============================================================================
2. .                                                         *kulala.README-.*

Together with Kulala Language Server https://github.com/mistweaverco/kulala-ls
and Kulala Formatter https://github.com/mistweaverco/kulala-fmt, we aim to
provide the best REST Client experience on the web without leaving your
favourite editor!


==============================================================================
3. ..                                                       *kulala.README-..*

Kulala team loves feature requests and feedback, so if you have any ideas or
suggestions, please let us know! We will be happy to implement them ❤️


INSTALL                                             *kulala.README-..-install*


  [!WARNING] Requires Neovim 0.10.0+ and cURL.
  See requirements
  https://neovim.getkulala.net/docs/getting-started/requirements.
Via lazy.nvim https://github.com/folke/lazy.nvim:


CONFIGURATION

>lua
    require("lazy").setup({
      {
        "mistweaverco/kulala.nvim",
        keys = {
          { "<leader>Rs", desc = "Send request" },
          { "<leader>Ra", desc = "Send all requests" },
          { "<leader>Rb", desc = "Open scratchpad" },
        },
        ft = {"http", "rest"},
        opts = {
          -- your configuration comes here
          global_keymaps = false,
          global_keymaps_prefix = "<leader>R",
        },
      },
    })
<


  [!WARNING] `opts` needs to be at least an empty table `{}` and can’t be
  completely omitted.

  [!NOTE] By default global keymaps are disabled, change to `global_keymaps =
  true` to get a complete set of key mappings for Kulala. Check the keymaps
  documentation https://neovim.getkulala.net/docs/getting-started/keymaps for
  details.
See complete configuration options
https://neovim.getkulala.net/docs/getting-started/configuration-options for
more information.


HONORABLE MENTIONS                       *kulala.README-..-honorable-mentions*


REST.NVIM

For getting this project started.

This project was heavily inspired by the idea of having a REST client in
Neovim.

The actual state of rest.nvim https://github.com/rest-nvim/rest.nvim as
archived kicked off the development of kulala.nvim.


  [!NOTE] The project has been un-archived
  https://github.com/rest-nvim/rest.nvim/issues/398#issue-2442747909 again, so
  check it out if you’re looking for an alternative.

CURL.NVIM

If you want a simple scratchpad for making HTTP requests, check out curl.nvim
https://github.com/oysandvik94/curl.nvim

It’s very different to this project, but it’s a great tool for making HTTP
requests from within Neovim and maybe just your cup of tea.


HTTPBIN.ORG

For providing a great service for testing HTTP requests and making it in all
the kulala examples.

Thanks for making it easy to test and develop this plugin.

==============================================================================
4. Links                                                 *kulala.README-links*

1. *Kulala Logo*: logo.svg
2. *Made with love*: assets/badge-made-with-love.svg
3. *GitHub release (latest by date)*: https://img.shields.io/github/v/release/mistweaverco/kulala.nvim?style=for-the-badge
4. *Discord*: assets/badge-discord.svg
5. *demo*: ./assets/demo.gif

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
