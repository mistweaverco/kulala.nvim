*kulala.nvim.client-reference.txt*A fully-featured REST Client Interface for Neovim.

==============================================================================
Table of Contents             *kulala.nvim.client-reference-table-of-contents*

1. Scripts client reference|kulala.nvim.client-reference-scripts-client-reference|
  - client.global.set|kulala.nvim.client-reference-scripts-client-reference-client.global.set|
  - client.global.get|kulala.nvim.client-reference-scripts-client-reference-client.global.get|
  - client.log|kulala.nvim.client-reference-scripts-client-reference-client.log|
  - client.test|kulala.nvim.client-reference-scripts-client-reference-client.test|
  - client.assert and client.assert.*|kulala.nvim.client-reference-scripts-client-reference-client.assert-and-client.assert.*|
  - client.exit|kulala.nvim.client-reference-scripts-client-reference-client.exit|
  - client.clear|kulala.nvim.client-reference-scripts-client-reference-client.clear|
  - client.clearAll|kulala.nvim.client-reference-scripts-client-reference-client.clearall|

==============================================================================
1. Scripts client reference*kulala.nvim.client-reference-scripts-client-reference*

These helper functions are available in the client object in scripts.


CLIENT.GLOBAL.SET*kulala.nvim.client-reference-scripts-client-reference-client.global.set*

Set a variable.

Variables are persisted across script runs and Neovim restarts.

>javascript
    client.global.set("SOME_TOKEN", "123");
<


CLIENT.GLOBAL.GET*kulala.nvim.client-reference-scripts-client-reference-client.global.get*

Get a variable.

Variables are persisted across script runs and Neovim restarts.

>javascript
    client.log(client.global.get("SOME_TOKEN"));
<


CLIENT.LOG  *kulala.nvim.client-reference-scripts-client-reference-client.log*

Logs arbitrary data to the console.

>javascript
    client.log("Hello, world!");
<


CLIENT.TEST*kulala.nvim.client-reference-scripts-client-reference-client.test*

Define a test suite and individual test cases within it. See Testing and
Reporting <./../usage/testing-and-reporting.md> for more information.


CLIENT.ASSERT AND CLIENT.ASSERT.**kulala.nvim.client-reference-scripts-client-reference-client.assert-and-client.assert.**

A collection of assertion functions to validate various aspects of the
response. See Testing and Reporting <./../usage/testing-and-reporting.md> for
more information.


CLIENT.EXIT*kulala.nvim.client-reference-scripts-client-reference-client.exit*

Terminates execution of the response handler script.

>javascript
    client.exit();
<


CLIENT.ISEMPTY ~

Checks whether the `global` object has no variables defined.

>javascript
    const isEmpty = client.isEmpty();
    if (isEmpty) {
      client.log("No global variables defined");
    }
<


CLIENT.CLEAR*kulala.nvim.client-reference-scripts-client-reference-client.clear*

Removes the `varName` variable from the global variables storage.

>javascript
    client.clear("SOME_TOKEN");
<


CLIENT.CLEARALL*kulala.nvim.client-reference-scripts-client-reference-client.clearall*

Removes all variables from the global variables storage.

>javascript
    client.clearAll();
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
