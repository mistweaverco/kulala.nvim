*kulala.graphql.txt*        A fully-featured REST Client Interface for Neovim.

==============================================================================
Table of Contents                           *kulala.graphql-table-of-contents*

1. GraphQL                                            |kulala.graphql-graphql|
  - With variables                     |kulala.graphql-graphql-with-variables|
  - Without variables               |kulala.graphql-graphql-without-variables|
  - Download GraphQL Server Schema|kulala.graphql-graphql-download-graphql-server-schema|

==============================================================================
1. GraphQL                                            *kulala.graphql-graphql*

You can use the `GRAPHQL` method, `@graphql` directive or `X-REQUEST-TYPE:
GraphQL` header to send GraphQL requests.

Create a file with the `.http` extension and write your GraphQL requests in it.


WITH VARIABLES                         *kulala.graphql-graphql-with-variables*

title="gql-with-variables.http"

>http
    GRAPHQL https://swapi-graphql.netlify.app/.netlify/functions/index HTTP/1.1
    Accept: application/json
    X-REQUEST-TYPE: GraphQL
    
    query Person($id: ID) {
      person(personID: $id) {
        name
      }
    }
    
    { "id": 1 }
<


WITHOUT VARIABLES                   *kulala.graphql-graphql-without-variables*

title="gql-without-variables.http"

>http
    # @graphql
    POST https://swapi-graphql.netlify.app/.netlify/functions/index HTTP/1.1
    Accept: application/json
    X-REQUEST-TYPE: GraphQL
    
    query Query {
      allFilms {
        films {
          title
          director
          releaseDate
          speciesConnection {
            species {
              name
              classification
              homeworld {
                name
              }
            }
          }
        }
      }
    }
<


DOWNLOAD GRAPHQL SERVER SCHEMA*kulala.graphql-graphql-download-graphql-server-schema*

You can download the schema of a GraphQL server with:

>
    :lua require("kulala").download_graphql_schema()
<

You need to have your cursor on a line with a GraphQL request.

The file will be downloaded to the the directory where the current file is
located.

The filename will be `[http-file-name-without-extension].graphql-schema.json`.

This file can be used in conjunction with the kulala-ls
<https://github.com/mistweaverco/kulala-ls> Language Server to provide
autocompletion and type checking.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
